{"version":3,"sources":["App.tsx","index.tsx"],"names":["Sort","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","a","b","Alphabet","localeCompare","Length","length","reverse","getPreparedGoods","isResetButtonVisible","Boolean","className","type","classnames","onClick","Default","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,WAAAA,E,gBAAAA,E,iBAAAA,M,KA6BE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA3BR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAa,YAAOD,GAe1B,OAbIL,GACFM,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQT,GACN,KAAKJ,EAAKc,SACR,OAAOF,EAAEG,cAAcF,GACzB,KAAKb,EAAKgB,OACR,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAKRX,EAAaI,EAAcQ,UAAYR,EAOzBS,CAAiBlB,EAAiBG,EAAWE,GAC5Dc,EAAuBC,QAAQf,GAAcF,GAOnD,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYpB,IAAcJ,EAAKc,WAEjCW,QAAS,kBAAMpB,EAAaL,EAAKc,WALnC,iCAUA,wBACES,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYpB,IAAcJ,EAAKgB,SAEjCS,QAAS,kBAAMpB,EAAaL,EAAKgB,SALnC,4BAUA,wBACEO,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAAalB,IAEfmB,QAAS,kBAAMlB,GAAeD,IALhC,qBAUCc,GACC,wBACEG,KAAK,SACLE,QAAS,kBAxCjBpB,EAAaL,EAAK0B,cAClBnB,GAAc,IAwCNe,UAAU,mBAHZ,sBAUJ,6BACGd,EAAamB,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCvGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.23cb0ee1.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classnames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum Sort {\n  Default = '',\n  Length = 'length',\n  Alphabet = 'name',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortField: string,\n  isReversed: boolean,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((a, b) => {\n      switch (sortField) {\n        case Sort.Alphabet:\n          return a.localeCompare(b);\n        case Sort.Length:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return isReversed ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, isReversed);\n  const isResetButtonVisible = Boolean(isReversed || sortField);\n\n  const setDefaultSort = (): void => {\n    setSortField(Sort.Default);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classnames('button', 'is-info', {\n            'is-light': sortField !== Sort.Alphabet,\n          })}\n          onClick={() => setSortField(Sort.Alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classnames('button', 'is-success', {\n            'is-light': sortField !== Sort.Length,\n          })}\n          onClick={() => setSortField(Sort.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classnames('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonVisible && (\n          <button\n            type=\"button\"\n            onClick={() => setDefaultSort()}\n            className=\"button is-danger\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}